#!/usr/bin/env escript
%% -*- erlang -*-
%%% @author Tony Rogvall <tony@rogvall.se>
%%% @copyright (C) 2015, Tony Rogvall
%%% @doc
%%%    Flash update a seazone/lpc device
%%% @end

main(Opts) ->
    put(debug, 0),
    put(control, false),
    put(control_inv, false),
    put(control_swap, false),
    case options(Opts, "") of
	{"",_} ->
	    usage();
	{Device,""} ->
	    Baud = case get(baud) of
		       B when is_integer(B), B>0 -> B;
		       _ -> 38400
		   end,
	    case elpcisp:open(Device,Baud) of
		{ok,U} ->
		    case elpcisp:sync(U, 30) of
			{ok,_} ->
			    io:format("info: ~p\n", [elpcisp:info(U)]),
			    elpcisp:close(U);
			Error ->
			    io:format("elpcisp error (sync): ~p\n", [Error])
		    end;
		Error ->
		    io:format("elpcisp open (sync): ~p\n", [Error])
	    end;
	{Device,File} ->
	    case elpcisp:flash(Device, File) of
		ok -> ok;
		{error,enoent} ->
		    case filelib:is_file(File) of
			true ->
			    io:format("elpcisp: can not open device ~s\n", [Device]);
			false ->
			    io:format("elpcisp: can not open hex file ~s\n", [File])
		    end,
		    usage();
		{error,Reason} ->
		    io:format("elpcisp: error ~p\n", [Reason]),
		    usage()
	    end
    end.
	    
options(["-D", Device | Opts], _Device) ->
    options(Opts, Device);
options(["--device", Device | Opts], _Device) ->
    options(Opts, Device);
options(["--control" | Opts], Device) ->
    put(control, true),  %% FIXME
    options(Opts, Device);
options(["-c" | Opts], Device) ->
    put(control, true),  %% FIXME
    options(Opts, Device);
options(["--controlswap" | Opts], Device) ->
    put(control_swap, true),  %% FIXME
    options(Opts, Device);
options(["--controlinv" | Opts], Device) ->
    put(control_inv, true),  %% FIXME
    options(Opts, Device);
options(["--debug" | Opts], Device) ->
    put(debug, 1),
    options(Opts, Device);
options(["--debug2" | Opts], Device) ->
    put(debug, 2),
    options(Opts, Device);
options(["-d" | Opts], Device) ->
    case get(debug) of
	D when is_integer(D) -> put(debug,D+1);
	_ -> put(debug, 1)
    end,
    options(Opts, Device);
options(["--baudrate", Rate | Opts], Device) ->
    put(baud, list_to_integer(Rate)),
    options(Opts, Device);
options(["-b", Rate | Opts], Device) ->
    put(baud, list_to_integer(Rate)),
    options(Opts, Device);
options([[$-|Opt] | _Opts], _Device) ->
    io:format("unknown option ~s\n", [Opt]),
    usage();
options([], Device) ->
    {Device, ""};
options([File], Device) ->
    {Device, File};
options(_, _Device) ->
    usage().

usage() ->
    io:format("elpcisp: usage elpcisp <options> hex-file\n"),
    io:format("OPTIONS\n"),
    io:format("  --control           DTR+RTS    reset + isp\n"),
    io:format("  --controlinv        /DTR+/RTS  reset + isp\n"),
    io:format("  --controlswap       RTS+DTR    reset + isp\n"),
    io:format("  --device <device>   set decive name\n"),
    io:format("  --debug             turn on debugging\n"),
    io:format("  --debug2            turn on hard debugging\n"),
    io:format("  --baudrate <rate>   set baud rate\n"),
    io:format("  -c                  DTR+RTS reset + isp\n"),
    io:format("  -d                  turn on debugging\n"),
    io:format("  -D <device>         set device name\n"),
    io:format("  -b <rate>           set baud rate\n"),
    erlang:halt(1).
